{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/mileslacek/prime/tier3/prime-solo-project-master/src/components/UserPage/UserPage.js\";\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport LogOutButton from '../LogOutButton/LogOutButton';\nimport Button from '@material-ui/core/Button'; // this could also be written with destructuring parameters as:\n// const UserPage = ({ user }) => (\n// and then instead of `props.user.username` you could use `user.username`\n// class UserPage extends Component {\n//   render(){\n//     return (\n//       <div>\n//         <h1 id=\"welcome\">Welcome, {props.user.username}!</h1>\n//         <p>Your ID is: {props.user.id}</p>\n//         <div></div>\n//         <LogOutButton className=\"log-in\" />\n//       </div>\n//     );\n//   }\n// }\n\ntoCreateBatch = function toCreateBatch(d) {\n  _this.props.history.push(\"/create\"); // brings the user to logbook\n\n};\n\ntoLogBook = function toLogBook(id) {\n  _this.props.history.push('/logbook');\n};\n\nvar UserPage = function UserPage(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    id: \"welcome\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Welcome, \", props.user.username, \"!\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Your ID is: \", props.user.id), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: _this.toLogBook,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"GO TO LOG BOOK\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: _this.toCreateBatch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"GO TO CREATE BATCH\")), React.createElement(LogOutButton, {\n    className: \"log-in\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }));\n};\n\n{}\n/* <Button onClick={this.toLogBook}>GO TO LOG BOOK</Button>\n<Button onClick={this.toCreateBatch}>GO TO CREATE BATCH</Button> */\n// Instead of taking everything from state, we just want the user info.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({user}) => ({ user });\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}; // this allows us to use <App /> in index.js\n\n\nexport default connect(mapStateToProps)(UserPage);","map":{"version":3,"sources":["/Users/mileslacek/prime/tier3/prime-solo-project-master/src/components/UserPage/UserPage.js"],"names":["React","Component","connect","LogOutButton","Button","toCreateBatch","d","props","history","push","toLogBook","id","UserPage","user","username","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,MAAP,MAAmB,0BAAnB,C,CACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAC,aAAa,GAAG,uBAAAC,CAAC,EAAI;AAClB,EAAA,KAAI,CAACC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,YADkB,CACkB;;AACrC,CAFF;;AAICC,SAAS,GAAG,mBAAAC,EAAE,EAAI;AAChB,EAAA,KAAI,CAACJ,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,UAAxB;AACD,CAFD;;AAID,IAAMG,QAAQ,GAAG,SAAXA,QAAW,CAAAL,KAAK;AAAA,SACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,EAAE,EAAC,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA2BA,KAAK,CAACM,IAAN,CAAWC,QAAtC,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAgBP,KAAK,CAACM,IAAN,CAAWF,EAA3B,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,KAAI,CAACD,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAIE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,KAAI,CAACL,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJF,CAHF,EASE,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAC,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADoB;AAAA,CAAtB;;AAcA,CACoE;AADnE;;AAGD;AACA;AACA;;AACA,IAAMU,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCH,IAAAA,IAAI,EAAEG,KAAK,CAACH;AADoB,GAAL;AAAA,CAA7B,C,CAIA;;;AACA,eAAeX,OAAO,CAACa,eAAD,CAAP,CAAyBH,QAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport LogOutButton from '../LogOutButton/LogOutButton';\nimport Button from '@material-ui/core/Button'\n// this could also be written with destructuring parameters as:\n// const UserPage = ({ user }) => (\n// and then instead of `props.user.username` you could use `user.username`\n\n// class UserPage extends Component {\n  \n//   render(){\n//     return (\n//       <div>\n//         <h1 id=\"welcome\">Welcome, {props.user.username}!</h1>\n//         <p>Your ID is: {props.user.id}</p>\n//         <div></div>\n//         <LogOutButton className=\"log-in\" />\n//       </div>\n//     );\n//   }\n// }\n\ntoCreateBatch = d => {\n   this.props.history.push(`/create`); // brings the user to logbook\n };\n \n toLogBook = id => {\n   this.props.history.push('/logbook');\n };\n\nconst UserPage = props => (\n  <div>\n    <h1 id=\"welcome\">Welcome, {props.user.username}!</h1>\n    <p>Your ID is: {props.user.id}</p>\n    <div>\n      <Button onClick={this.toLogBook}>GO TO LOG BOOK</Button>\n      <br>\n      </br>\n      <Button onClick={this.toCreateBatch}>GO TO CREATE BATCH</Button>\n    </div>\n    <LogOutButton className=\"log-in\" />\n  </div>\n);\n\n{/* <Button onClick={this.toLogBook}>GO TO LOG BOOK</Button>\n<Button onClick={this.toCreateBatch}>GO TO CREATE BATCH</Button> */}\n\n// Instead of taking everything from state, we just want the user info.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({user}) => ({ user });\nconst mapStateToProps = state => ({\n  user: state.user,\n});\n\n// this allows us to use <App /> in index.js\nexport default connect(mapStateToProps)(UserPage);\n"]},"metadata":{},"sourceType":"module"}