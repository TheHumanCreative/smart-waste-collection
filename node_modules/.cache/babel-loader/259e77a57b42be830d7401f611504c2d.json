{"ast":null,"code":"import _classCallCheck from \"/Users/mileslacek/prime/tier3/prime-solo-project-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mileslacek/prime/tier3/prime-solo-project-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mileslacek/prime/tier3/prime-solo-project-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mileslacek/prime/tier3/prime-solo-project-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mileslacek/prime/tier3/prime-solo-project-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mileslacek/prime/tier3/prime-solo-project-master/src/components/EditBatchPage/EditBatchPage.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\n\nvar EditBatchPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditBatchPage, _Component);\n\n  function EditBatchPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditBatchPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditBatchPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.fetchbatch = function () {\n      var id = _this.props.match.params.id;\n\n      _this.props.dispatch({\n        type: \"FETCH_BATCH_ITEM\",\n        payload: id\n      });\n    };\n\n    _this.updateBatch = function (event) {\n      event.preventDefault();\n      var update = {\n        style_id: _this.props.reduxStore.editReducer.style_id,\n        beer_name: _this.props.reduxStore.editReducer.beer_name,\n        batch_name: _this.props.reduxStore.editReducer.batch_name,\n        temp_hlt: _this.props.reduxStore.editReducer.temp_hlt,\n        temp_mash_in: _this.props.reduxStore.editReducer.temp_mash_in,\n        temp_mash_out: _this.props.reduxStore.editReducer.temp_mash_out,\n        time_boil: _this.props.reduxStore.editReducer.time_boil,\n        notes: _this.props.reduxStore.editReducer.notes,\n        id: _this.props.reduxStore.editReducer.id\n      };\n      console.log('update', update);\n\n      _this.props.dispatch({\n        type: \"UPDATE\",\n        payload: update\n      });\n    };\n\n    _this.toLogBook = function () {\n      _this.props.history.push(\"/logbook\"); // brings the user to logbook\n\n    };\n\n    _this.toHome = function () {\n      _this.props.history.push(\"/\"); // brings the user to home\n\n    };\n\n    return _this;\n  }\n\n  _createClass(EditBatchPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.dispatch({\n        type: \"FETCH_BATCH_INFO\"\n      }); // this.props.dispatch({\n      //   type: \"FETCH_BATCH_ITEM\"\n      // });\n\n      this.fetchbatch();\n      this.props.dispatch({\n        type: \"FETCH_STYLES_INFO\"\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        id: \"table1\",\n        onSubmit: this.updateBatch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"sel1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Beer Style:\"), React.createElement(\"select\", {\n        onSubmit: this.handleStylePost,\n        className: \"form-control\",\n        onChange: this.handleChangeBeerType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"None\"), this.props.reduxStore.styleReducer.map(function (style) {\n        return React.createElement(\"option\", {\n          key: style.id,\n          value: style.beer_type,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, style.beer_type);\n      }))), React.createElement(TextField, {\n        label: \"Edit Beer Name:\",\n        deafaultValue: this.props.reduxStore.editReducer.beer_name // onChange={event => this.setState({ title: event.target.value })\n        ,\n        onChange: function onChange(event) {\n          return _this2.props.dispatch({\n            type: \"UPDATE\",\n            payload: {\n              propertyName: \"beer_name\",\n              value: event.target.value\n            }\n          });\n        },\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        label: \"Edit Batch Number:\",\n        defaultValue: this.props.reduxStore.editReducer.batch_name,\n        onChange: function onChange(event) {\n          return _this2.props.dispatch({\n            type: \"UPDATE\",\n            payload: {\n              propertyName: \"batch_name\",\n              value: event.target.value\n            }\n          });\n        },\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        label: \"Edit Hot Liquor Tank Temp:\",\n        defaultValue: this.props.reduxStore.editReducer.temp_hlt,\n        onChange: function onChange(event) {\n          return _this2.props.dispatch({\n            type: \"UPDATE\",\n            payload: {\n              propertyName: \"temp_hlt\",\n              value: event.target.value\n            }\n          });\n        },\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        label: \"Edit Mash-In Temp:\",\n        defaultValue: this.props.reduxStore.editReducer.temp_mash_in,\n        onChange: function onChange(event) {\n          return _this2.props.dispatch({\n            type: \"UPDATE\",\n            payload: {\n              propertyName: \"temp_mash_in\",\n              value: event.target.value\n            }\n          });\n        },\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        label: \"Edit Mash-Out Temp:\",\n        defaultValue: this.props.reduxStore.editReducer.temp_mash_out,\n        onChange: function onChange(event) {\n          return _this2.props.dispatch({\n            type: \"UPDATE\",\n            payload: {\n              propertyName: \"temp_mash_out\",\n              value: event.target.value\n            }\n          });\n        },\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        label: \"Edit Time of Boil:\",\n        defaultValue: this.props.reduxStore.editReducer.time_boil,\n        onChange: function onChange(event) {\n          return _this2.props.dispatch({\n            type: \"UPDATE\",\n            payload: {\n              propertyName: \"time_boil\",\n              value: event.target.value\n            }\n          });\n        },\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        label: \"Edit Notes:\",\n        defaultValue: this.props.reduxStore.editReducer.notes,\n        onChange: function onChange(event) {\n          return _this2.props.dispatch({\n            type: \"UPDATE\",\n            payload: {\n              propertyName: \"notes\",\n              value: event.target.value\n            }\n          });\n        },\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }), React.createElement(Button, {\n        id: \"submitBtn\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, \"Submit to Brew Log\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }), React.createElement(Button, {\n        id: \"logBookBtn\",\n        onClick: this.toLogBook,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, \"GO TO LOG BOOK\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }), React.createElement(Button, {\n        id: \"homePageBtn\",\n        onClick: this.toHome,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, \"GO TO HOME PAGE\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return EditBatchPage;\n}(Component);\n\n;\n\nvar mapStateToProps = function mapStateToProps(reduxStore) {\n  return {\n    reduxStore: reduxStore\n  };\n};\n\nexport default connect(mapStateToProps)(EditBatchPage);","map":{"version":3,"sources":["/Users/mileslacek/prime/tier3/prime-solo-project-master/src/components/EditBatchPage/EditBatchPage.js"],"names":["React","Component","connect","Button","TextField","EditBatchPage","fetchbatch","id","props","match","params","dispatch","type","payload","updateBatch","event","preventDefault","update","style_id","reduxStore","editReducer","beer_name","batch_name","temp_hlt","temp_mash_in","temp_mash_out","time_boil","notes","console","log","toLogBook","history","push","toHome","handleStylePost","handleChangeBeerType","styleReducer","map","style","beer_type","propertyName","value","target","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\n\nclass EditBatchPage extends Component {\n\n  componentDidMount() {\n    this.props.dispatch({\n      type: \"FETCH_BATCH_INFO\"\n      \n    });\n\n      // this.props.dispatch({\n      //   type: \"FETCH_BATCH_ITEM\"\n      // });\n      this.fetchbatch();\n\n\n    this.props.dispatch({\n      type: \"FETCH_STYLES_INFO\"\n      \n    });\n  }\n\n\n  fetchbatch = () => {\n    let id = this.props.match.params.id;\n    this.props.dispatch({\n      type: \"FETCH_BATCH_ITEM\",\n      payload: id\n    });\n  }\n\n  // handlePost = event => {\n  //   event.preventDefault();\n  //   console.log(\"Submit Button has been Clicked\");\n  //   this.props.dispatch({\n  //     type: \"POST_INFO\",\n  //     payload: this.state\n  //   });\n  // };\n\n  // handleStylePost = event => {\n  //   event.preventDefault();\n  //   console.log(\"Styles has been added to Beer Batch.\");\n  //   this.props.dispatch({\n  //     type: \"POST_STYLES\",\n  //     payload: this.state\n  //   });\n  // };\n\n  // handleChangeBeerType = event => {\n  //   this.setState({\n  //     beer_type: event.target.value\n  //   });\n  // };\n\n  // handleChangeBeerName = event => {\n  //   this.setState({\n  //     beer_name: event.target.value\n  //   });\n  // };\n\n  // handleChangeBatchNumber = event => {\n  //   this.setState({\n  //     batch_name: event.target.value\n  //   });\n  // };\n\n  // handleChangeHotLiquor = event => {\n  //   this.setState({\n  //     temp_hlt: event.target.value\n  //   });\n  // };\n\n  // handleChangeMashIn = event => {\n  //   this.setState({\n  //     mash_in_temp: event.target.value\n  //   });\n  // };\n\n  // handleChangeMashOut = event => {\n  //   this.setState({\n  //     mash_out_temp: event.target.value\n  //   });\n  // };\n\n  // handleChangeBoilTime = event => {\n  //   this.setState({\n  //     time_boil: event.target.value\n  //   });\n  // };\n\n  // handleChangeNotes = event => {\n  //   this.setState({\n  //     notes: event.target.value\n  //   });\n  // };\n\n  \n  \n\n  updateBatch = event => {\n    event.preventDefault();\n\n    let update = {\n      style_id: this.props.reduxStore.editReducer.style_id,\n      beer_name: this.props.reduxStore.editReducer.beer_name,\n      batch_name: this.props.reduxStore.editReducer.batch_name,\n      temp_hlt: this.props.reduxStore.editReducer.temp_hlt,\n      temp_mash_in: this.props.reduxStore.editReducer.temp_mash_in,\n      temp_mash_out: this.props.reduxStore.editReducer.temp_mash_out,\n      time_boil: this.props.reduxStore.editReducer.time_boil,\n      notes: this.props.reduxStore.editReducer.notes,\n      id: this.props.reduxStore.editReducer.id\n    }\n\n    console.log('update', update);\n    this.props.dispatch({\n      type: \"UPDATE\",\n      payload: update\n    });\n  };\n\n  toLogBook = () => {\n    this.props.history.push(`/logbook`); // brings the user to logbook\n  };\n\n  toHome = () => {\n    this.props.history.push(`/`); // brings the user to home\n  };\n\n  render() {\n    return (\n      <div>\n        <form id=\"table1\" onSubmit={this.updateBatch}>\n          <div class=\"form-group\">\n            <label for=\"sel1\">Beer Style:</label>\n            {/* <select class=\"form-control\" id=\"sel1\"> */}\n            <select\n              onSubmit={this.handleStylePost}\n              className=\"form-control\"\n              onChange={this.handleChangeBeerType}\n            >\n              <option value=\"\">None</option>\n              {this.props.reduxStore.styleReducer.map(style => {\n                return (\n                  <option key={style.id} value={style.beer_type}>\n                    {style.beer_type}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n          <TextField\n            label=\"Edit Beer Name:\"\n            deafaultValue={this.props.reduxStore.editReducer.beer_name}\n            // onChange={event => this.setState({ title: event.target.value })\n            onChange={event =>\n              this.props.dispatch({\n                type: \"UPDATE\",\n                payload: {\n                  propertyName: \"beer_name\",\n                  value: event.target.value\n                }\n              })\n            }\n            fullWidth\n          />\n          {/* <p>Name your Beer: </p> */}\n          {/* <label for=\"sel1\">Name your Beer: </label>\n          <input\n              class=\"batchForm\"\n              onChange={this.handleChangeBeerName}\n              type=\"text\"\n              placeholder=\"Name the Beer / Batch\"\n              />\n          <br></br>\n          {/* <p>Give the batch a number: </p> */}\n          <TextField\n            label=\"Edit Batch Number:\"\n            defaultValue={this.props.reduxStore.editReducer.batch_name}\n            onChange={event =>\n              this.props.dispatch({\n                type: \"UPDATE\",\n                payload: {\n                  propertyName: \"batch_name\",\n                  value: event.target.value\n                }\n              })\n            }\n            fullWidth\n          />\n\n          {/* <label for=\"sel1\">Give the batch a number: </label>\n          <input\n            class=\"batchForm\"\n            onChange={this.handleChangeBatchNumber}\n            type=\"text\"\n            placeholder=\"Give your batch a number\"\n          /> */}\n          <br></br>\n          <TextField\n            label=\"Edit Hot Liquor Tank Temp:\"\n            defaultValue={this.props.reduxStore.editReducer.temp_hlt}\n            onChange={event =>\n              this.props.dispatch({\n                type: \"UPDATE\",\n                payload: {\n                  propertyName: \"temp_hlt\",\n                  value: event.target.value\n                }\n              })\n            }\n            fullWidth\n          />\n\n          {/* <p>Hot-Liquor-Tank-Temp: </p> */}\n          {/* <label for=\"sel1\">Hot-Liquor-Tank Temp: </label>\n          <input\n            class=\"batchForm\"\n            onChange={this.handleChangeHotLiquor}\n            type=\"text\"\n            placeholder=\"Please log the HLT Temp\"\n          /> */}\n          <br></br>\n\n          <TextField\n            label=\"Edit Mash-In Temp:\"\n            defaultValue={this.props.reduxStore.editReducer.temp_mash_in}\n            onChange={event =>\n              this.props.dispatch({\n                type: \"UPDATE\",\n                payload: {\n                  propertyName: \"temp_mash_in\",\n                  value: event.target.value\n                }\n              })\n            }\n            fullWidth\n          />\n          {/* <p>Mash-In-Temp: </p> */}\n          {/* <label for=\"sel1\">Mash-In-Temp: </label>\n          <input\n            class=\"batchForm\"\n            onChange={this.handleChangeMashIn}\n            type=\"text\"\n            placeholder=\"Please log the Mash-In Temp\"\n          /> */}\n          <br></br>\n\n          <TextField\n            label=\"Edit Mash-Out Temp:\"\n            defaultValue={this.props.reduxStore.editReducer.temp_mash_out}\n            onChange={event =>\n              this.props.dispatch({\n                type: \"UPDATE\",\n                payload: {\n                  propertyName: \"temp_mash_out\",\n                  value: event.target.value\n                }\n              })\n            }\n            fullWidth\n          />\n          {/* <p>Mash-Out-Temp: </p> */}\n          {/* <label for=\"sel1\">Mash-Out-Temp: </label>\n          <input\n            class=\"batchForm\"\n            onChange={this.handleChangeMashOut}\n            type=\"text\"\n            placeholder=\"Please log the Mash-In Temp\"\n          /> */}\n          <br></br>\n\n          <TextField\n            label=\"Edit Time of Boil:\"\n            defaultValue={this.props.reduxStore.editReducer.time_boil}\n            onChange={event =>\n              this.props.dispatch({\n                type: \"UPDATE\",\n                payload: {\n                  propertyName: \"time_boil\",\n                  value: event.target.value\n                }\n              })\n            }\n            fullWidth\n          />\n          {/* <p>Boil Time: </p> */}\n          {/* <label for=\"sel1\">Boil Time: </label>\n          <input\n            class=\"batchForm\"\n            onChange={this.handleChangeBoilTime}\n            type=\"text\"\n            placeholder=\"Please log the Boil Time\"\n          /> */}\n          <br></br>\n\n          <TextField\n            label=\"Edit Notes:\"\n            defaultValue={this.props.reduxStore.editReducer.notes}\n            onChange={event =>\n              this.props.dispatch({\n                type: \"UPDATE\",\n                payload: {\n                  propertyName: \"notes\",\n                  value: event.target.value\n                }\n              })\n            }\n            fullWidth\n          />\n          {/* <p>Please leave detailed notes: </p> */}\n          {/* <label for=\"sel1\">Please leave detailed notes: </label>\n          <input\n            class=\"batchForm\"\n            onChange={this.handleChangeNotes}\n            type=\"text\"\n            placeholder=\"Please log any notes\"\n          /> */}\n          <br></br>\n          <Button id=\"submitBtn\" type=\"submit\">\n            Submit to Brew Log\n          </Button>\n        </form>\n        <br></br>\n        <Button id=\"logBookBtn\" onClick={this.toLogBook}>\n          GO TO LOG BOOK\n        </Button>\n        <br></br>\n        <Button id=\"homePageBtn\" onClick={this.toHome}>\n          GO TO HOME PAGE\n        </Button>\n        <br></br>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = reduxStore => {\n    return{\n        reduxStore\n    };\n};\n\nexport default connect(mapStateToProps)(EditBatchPage);"]},"metadata":{},"sourceType":"module"}