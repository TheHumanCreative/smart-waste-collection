{"ast":null,"code":"import _classCallCheck from \"/Users/mileslacek/prime/tier3/prime-solo-project-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mileslacek/prime/tier3/prime-solo-project-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mileslacek/prime/tier3/prime-solo-project-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mileslacek/prime/tier3/prime-solo-project-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mileslacek/prime/tier3/prime-solo-project-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mileslacek/prime/tier3/prime-solo-project-master/src/components/EditBatchPage/EditBatchPage.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\"; //This is the Create Batch page and will have the user able to:\n// Create a Batch\n// Name a Batch\n// Input temps and time\n// Submit the data to the database and be alerted if they are\n// Unsuccessful ADD to Database AND Successful ADD to the Database.\n\nvar EditBatchPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditBatchPage, _Component);\n\n  function EditBatchPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditBatchPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditBatchPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      beer_type: \"\",\n      beer_name: \"\",\n      batch_name: \"\",\n      temp_hlt: \"\",\n      temp_mash_in: \"\",\n      temp_mash_out: \"\",\n      time_boil: \"\",\n      notes: \"\"\n    };\n\n    _this.handlePost = function (event) {\n      event.preventDefault();\n      console.log(\"Submit Button has been Clicked\");\n\n      _this.props.dispatch({\n        type: \"POST_INFO\",\n        payload: _this.state\n      });\n    };\n\n    _this.handleStylePost = function (event) {\n      event.preventDefault();\n      console.log(\"Styles has been added to Beer Batch.\");\n\n      _this.props.dispatch({\n        type: \"POST_STYLES\",\n        payload: _this.state\n      });\n    };\n\n    _this.handleChangeBeerType = function (event) {\n      _this.setState({\n        beer_type: event.target.value\n      });\n    };\n\n    _this.handleChangeBeerName = function (event) {\n      _this.setState({\n        beer_name: event.target.value\n      });\n    };\n\n    _this.handleChangeBatchNumber = function (event) {\n      _this.setState({\n        batch_name: event.target.value\n      });\n    };\n\n    _this.handleChangeHotLiquor = function (event) {\n      _this.setState({\n        temp_hlt: event.target.value\n      });\n    };\n\n    _this.handleChangeMashIn = function (event) {\n      _this.setState({\n        mash_in_temp: event.target.value\n      });\n    };\n\n    _this.handleChangeMashOut = function (event) {\n      _this.setState({\n        mash_out_temp: event.target.value\n      });\n    };\n\n    _this.handleChangeBoilTime = function (event) {\n      _this.setState({\n        time_boil: event.target.value\n      });\n    };\n\n    _this.handleChangeNotes = function (event) {\n      _this.setState({\n        notes: event.target.value\n      });\n    };\n\n    _this.updateTitleAndDescription = function (event) {\n      event.preventDefault();\n      var editTitleAndDescription = {\n        id: _this.state.id,\n        title: _this.state.title,\n        description: _this.state.description\n      };\n\n      _this.props.dispatch({\n        type: \"UPDATE\",\n        payload: editTitleAndDescription\n      });\n\n      console.log(\"Updating title:\", _this.state.title, _this.state.description);\n\n      _this.props.history.push(\"/details/\".concat(_this.props.match.params.id));\n    };\n\n    _this.toLogBook = function (id) {\n      _this.props.history.push(\"/logbook\"); // brings the user to logbook\n\n    };\n\n    _this.toHome = function () {\n      _this.props.history.push(\"/\"); // brings the user to home\n\n    };\n\n    return _this;\n  }\n\n  _createClass(EditBatchPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.dispatch({\n        type: \"FETCH_BATCH_INFO\"\n      });\n      this.props.dispatch({\n        type: \"FETCH_STYLES_INFO\"\n      });\n    } // handleDelete(user_id, id) {\n    //   console.log(\"this is the id to be DELETED:\", id);\n    //   console.log(\"this is the user who will be DELETED\", user_id);\n    //   this.props.dispatch({\n    //     type: \"DELETE_USER_BATCH\",\n    //     payload: { id: id, user_id: user_id }\n    //   });\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        id: \"table1\",\n        onSubmit: this.handlePost,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"sel1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Beer Style:\"), React.createElement(\"select\", {\n        onSubmit: this.handleStylePost,\n        className: \"form-control\",\n        onChange: this.handleChangeBeerType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"None\"), this.props.reduxStore.styleReducer.map(function (style) {\n        return React.createElement(\"option\", {\n          key: style.id,\n          value: style.beer_type,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }, style.beer_type);\n      }))), React.createElement(TextField, {\n        label: \"Edit Beer Name:\",\n        defaultValue: this.props.reduxStore.batchReducer.beer_name // onChange={event => this.setState({ title: event.target.value })\n        ,\n        onChange: function onChange(event) {\n          return _this2.props.dispatch({\n            type: \"UPDATE\",\n            payload: {\n              propertyName: \"beer_name\",\n              value: event.target.value\n            }\n          });\n        },\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        label: \"Edit Batch Number:\",\n        defaultValue: this.props.reduxStore.batchReducer.batch_name,\n        onChange: function onChange(event) {\n          return _this2.props.dispatch({\n            type: \"UPDATE\",\n            payload: {\n              propertyName: \"batch_name\",\n              value: event.target.value\n            }\n          });\n        },\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        label: \"Edit Hot Liquor Tank Temp:\",\n        defaultValue: this.props.reduxStore.batchReducer.temp_hlt,\n        onChange: function onChange(event) {\n          return _this2.props.dispatch({\n            type: \"UPDATE\",\n            payload: {\n              propertyName: \"temp_hlt\",\n              value: event.target.value\n            }\n          });\n        },\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        label: \"Edit Mash-In Temp:\",\n        defaultValue: this.props.reduxStore.batchReducer.temp_mash_in,\n        onChange: function onChange(event) {\n          return _this2.props.dispatch({\n            type: \"UPDATE\",\n            payload: {\n              propertyName: \"temp_mash_in\",\n              value: event.target.value\n            }\n          });\n        },\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        label: \"Edit Mash-Out Temp:\",\n        defaultValue: this.props.reduxStore.batchReducer.temp_mash_out,\n        onChange: function onChange(event) {\n          return _this2.props.dispatch({\n            type: \"UPDATE\",\n            payload: {\n              propertyName: \"temp_mash_out\",\n              value: event.target.value\n            }\n          });\n        },\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        label: \"Edit Time of Boil:\",\n        defaultValue: this.props.reduxStore.batchReducer.time_boil,\n        onChange: function onChange(event) {\n          return _this2.props.dispatch({\n            type: \"UPDATE\",\n            payload: {\n              propertyName: \"time_boil\",\n              value: event.target.value\n            }\n          });\n        },\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        label: \"Edit Notes:\",\n        defaultValue: this.props.reduxStore.batchReducer.notes,\n        onChange: function onChange(event) {\n          return _this2.props.dispatch({\n            type: \"UPDATE\",\n            payload: {\n              propertyName: \"notes\",\n              value: event.target.value\n            }\n          });\n        },\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }), React.createElement(Button, {\n        id: \"submitBtn\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, \"Submit to Brew Log\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }), React.createElement(Button, {\n        id: \"logBookBtn\",\n        onClick: this.toLogBook,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, \"GO TO LOG BOOK\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }), React.createElement(Button, {\n        id: \"homePageBtn\",\n        onClick: this.toHome,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, \"GO TO HOME PAGE\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return EditBatchPage;\n}(Component);\n\n;\n\nvar mapStateToProps = function mapStateToProps(reduxStore) {\n  return {\n    reduxStore: reduxStore\n  };\n};\n\nexport default connect(mapStateToProps)(EditBatchPage);","map":{"version":3,"sources":["/Users/mileslacek/prime/tier3/prime-solo-project-master/src/components/EditBatchPage/EditBatchPage.js"],"names":["React","Component","connect","Button","TextField","EditBatchPage","state","beer_type","beer_name","batch_name","temp_hlt","temp_mash_in","temp_mash_out","time_boil","notes","handlePost","event","preventDefault","console","log","props","dispatch","type","payload","handleStylePost","handleChangeBeerType","setState","target","value","handleChangeBeerName","handleChangeBatchNumber","handleChangeHotLiquor","handleChangeMashIn","mash_in_temp","handleChangeMashOut","mash_out_temp","handleChangeBoilTime","handleChangeNotes","updateTitleAndDescription","editTitleAndDescription","id","title","description","history","push","match","params","toLogBook","toHome","reduxStore","styleReducer","map","style","batchReducer","propertyName","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\n\n\n\n//This is the Create Batch page and will have the user able to:\n// Create a Batch\n// Name a Batch\n// Input temps and time\n// Submit the data to the database and be alerted if they are\n// Unsuccessful ADD to Database AND Successful ADD to the Database.\n\nclass EditBatchPage extends Component {\n  state = {\n    beer_type: \"\",\n    beer_name: \"\",\n    batch_name: \"\",\n    temp_hlt: \"\",\n    temp_mash_in: \"\",\n    temp_mash_out: \"\",\n    time_boil: \"\",\n    notes: \"\"\n  };\n\n  handlePost = event => {\n    event.preventDefault();\n    console.log(\"Submit Button has been Clicked\");\n    this.props.dispatch({\n      type: \"POST_INFO\",\n      payload: this.state\n    });\n  };\n\n  handleStylePost = event => {\n    event.preventDefault();\n    console.log(\"Styles has been added to Beer Batch.\");\n    this.props.dispatch({\n      type: \"POST_STYLES\",\n      payload: this.state\n    });\n  };\n\n  handleChangeBeerType = event => {\n    this.setState({\n      beer_type: event.target.value\n    });\n  };\n\n  handleChangeBeerName = event => {\n    this.setState({\n      beer_name: event.target.value\n    });\n  };\n\n  handleChangeBatchNumber = event => {\n    this.setState({\n      batch_name: event.target.value\n    });\n  };\n\n  handleChangeHotLiquor = event => {\n    this.setState({\n      temp_hlt: event.target.value\n    });\n  };\n\n  handleChangeMashIn = event => {\n    this.setState({\n      mash_in_temp: event.target.value\n    });\n  };\n\n  handleChangeMashOut = event => {\n    this.setState({\n      mash_out_temp: event.target.value\n    });\n  };\n\n  handleChangeBoilTime = event => {\n    this.setState({\n      time_boil: event.target.value\n    });\n  };\n\n  handleChangeNotes = event => {\n    this.setState({\n      notes: event.target.value\n    });\n  };\n\n  componentDidMount() {\n    this.props.dispatch({\n      type: \"FETCH_BATCH_INFO\"\n    });\n\n    this.props.dispatch({\n      type: \"FETCH_STYLES_INFO\"\n    });\n  }\n\n  // handleDelete(user_id, id) {\n  //   console.log(\"this is the id to be DELETED:\", id);\n  //   console.log(\"this is the user who will be DELETED\", user_id);\n  //   this.props.dispatch({\n  //     type: \"DELETE_USER_BATCH\",\n  //     payload: { id: id, user_id: user_id }\n  //   });\n  // }\n\n  updateTitleAndDescription = event => {\n    event.preventDefault();\n    let editTitleAndDescription = {\n      id: this.state.id,\n      title: this.state.title,\n      description: this.state.description\n    };\n    this.props.dispatch({\n      type: \"UPDATE\",\n      payload: editTitleAndDescription\n    });\n    console.log(\"Updating title:\", this.state.title, this.state.description);\n    this.props.history.push(`/details/${this.props.match.params.id}`);\n  };\n\n  toLogBook = id => {\n    this.props.history.push(`/logbook`); // brings the user to logbook\n  };\n\n  toHome = () => {\n    this.props.history.push(`/`); // brings the user to home\n  };\n\n  render() {\n    return (\n      <div>\n        <form id=\"table1\" onSubmit={this.handlePost}>\n          <div class=\"form-group\">\n            <label for=\"sel1\">Beer Style:</label>\n            {/* <select class=\"form-control\" id=\"sel1\"> */}\n            <select\n              onSubmit={this.handleStylePost}\n              className=\"form-control\"\n              onChange={this.handleChangeBeerType}\n            >\n              <option value=\"\">None</option>\n              {this.props.reduxStore.styleReducer.map(style => {\n                return (\n                  <option key={style.id} value={style.beer_type}>\n                    {style.beer_type}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n          <TextField\n            label=\"Edit Beer Name:\"\n            defaultValue={this.props.reduxStore.batchReducer.beer_name}\n            // onChange={event => this.setState({ title: event.target.value })\n            onChange={event =>\n              this.props.dispatch({\n                type: \"UPDATE\",\n                payload: {\n                  propertyName: \"beer_name\",\n                  value: event.target.value\n                }\n              })\n            }\n            fullWidth\n          />\n          {/* <p>Name your Beer: </p> */}\n          {/* <label for=\"sel1\">Name your Beer: </label>\n          <input\n              class=\"batchForm\"\n              onChange={this.handleChangeBeerName}\n              type=\"text\"\n              placeholder=\"Name the Beer / Batch\"\n              />\n          <br></br>\n          {/* <p>Give the batch a number: </p> */}\n          <TextField\n            label=\"Edit Batch Number:\"\n            defaultValue={this.props.reduxStore.batchReducer.batch_name}\n            onChange={event =>\n              this.props.dispatch({\n                type: \"UPDATE\",\n                payload: {\n                  propertyName: \"batch_name\",\n                  value: event.target.value\n                }\n              })\n            }\n            fullWidth\n          />\n\n          {/* <label for=\"sel1\">Give the batch a number: </label>\n          <input\n            class=\"batchForm\"\n            onChange={this.handleChangeBatchNumber}\n            type=\"text\"\n            placeholder=\"Give your batch a number\"\n          /> */}\n          <br></br>\n          <TextField\n            label=\"Edit Hot Liquor Tank Temp:\"\n            defaultValue={this.props.reduxStore.batchReducer.temp_hlt}\n            onChange={event =>\n              this.props.dispatch({\n                type: \"UPDATE\",\n                payload: {\n                  propertyName: \"temp_hlt\",\n                  value: event.target.value\n                }\n              })\n            }\n            fullWidth\n          />\n\n          {/* <p>Hot-Liquor-Tank-Temp: </p> */}\n          {/* <label for=\"sel1\">Hot-Liquor-Tank Temp: </label>\n          <input\n            class=\"batchForm\"\n            onChange={this.handleChangeHotLiquor}\n            type=\"text\"\n            placeholder=\"Please log the HLT Temp\"\n          /> */}\n          <br></br>\n\n          <TextField\n            label=\"Edit Mash-In Temp:\"\n            defaultValue={this.props.reduxStore.batchReducer.temp_mash_in}\n            onChange={event =>\n              this.props.dispatch({\n                type: \"UPDATE\",\n                payload: {\n                  propertyName: \"temp_mash_in\",\n                  value: event.target.value\n                }\n              })\n            }\n            fullWidth\n          />\n          {/* <p>Mash-In-Temp: </p> */}\n          {/* <label for=\"sel1\">Mash-In-Temp: </label>\n          <input\n            class=\"batchForm\"\n            onChange={this.handleChangeMashIn}\n            type=\"text\"\n            placeholder=\"Please log the Mash-In Temp\"\n          /> */}\n          <br></br>\n\n          <TextField\n            label=\"Edit Mash-Out Temp:\"\n            defaultValue={this.props.reduxStore.batchReducer.temp_mash_out}\n            onChange={event =>\n              this.props.dispatch({\n                type: \"UPDATE\",\n                payload: {\n                  propertyName: \"temp_mash_out\",\n                  value: event.target.value\n                }\n              })\n            }\n            fullWidth\n          />\n          {/* <p>Mash-Out-Temp: </p> */}\n          {/* <label for=\"sel1\">Mash-Out-Temp: </label>\n          <input\n            class=\"batchForm\"\n            onChange={this.handleChangeMashOut}\n            type=\"text\"\n            placeholder=\"Please log the Mash-In Temp\"\n          /> */}\n          <br></br>\n\n          <TextField\n            label=\"Edit Time of Boil:\"\n            defaultValue={this.props.reduxStore.batchReducer.time_boil}\n            onChange={event =>\n              this.props.dispatch({\n                type: \"UPDATE\",\n                payload: {\n                  propertyName: \"time_boil\",\n                  value: event.target.value\n                }\n              })\n            }\n            fullWidth\n          />\n          {/* <p>Boil Time: </p> */}\n          {/* <label for=\"sel1\">Boil Time: </label>\n          <input\n            class=\"batchForm\"\n            onChange={this.handleChangeBoilTime}\n            type=\"text\"\n            placeholder=\"Please log the Boil Time\"\n          /> */}\n          <br></br>\n\n          <TextField\n            label=\"Edit Notes:\"\n            defaultValue={this.props.reduxStore.batchReducer.notes}\n            onChange={event =>\n              this.props.dispatch({\n                type: \"UPDATE\",\n                payload: {\n                  propertyName: \"notes\",\n                  value: event.target.value\n                }\n              })\n            }\n            fullWidth\n          />\n          {/* <p>Please leave detailed notes: </p> */}\n          {/* <label for=\"sel1\">Please leave detailed notes: </label>\n          <input\n            class=\"batchForm\"\n            onChange={this.handleChangeNotes}\n            type=\"text\"\n            placeholder=\"Please log any notes\"\n          /> */}\n          <br></br>\n          <Button id=\"submitBtn\" type=\"submit\">\n            Submit to Brew Log\n          </Button>\n        </form>\n        <br></br>\n        <Button id=\"logBookBtn\" onClick={this.toLogBook}>\n          GO TO LOG BOOK\n        </Button>\n        <br></br>\n        <Button id=\"homePageBtn\" onClick={this.toHome}>\n          GO TO HOME PAGE\n        </Button>\n        <br></br>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = reduxStore => {\n    return{\n        reduxStore\n    };\n};\n\nexport default connect(mapStateToProps)(EditBatchPage);"]},"metadata":{},"sourceType":"module"}