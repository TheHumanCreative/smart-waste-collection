{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mileslacek/prime/tier3/prime-solo-project-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchStyleInfo),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(putStyleInfo),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(styleSaga);\n\nimport { put, takeLatest, takeEvery } from \"redux-saga/effects\";\nimport axios from \"axios\";\n\nfunction fetchStyleInfo() {\n  var infoStylesResponse;\n  return _regeneratorRuntime.wrap(function fetchStyleInfo$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return axios.get(\"/api/style\");\n\n        case 3:\n          infoStylesResponse = _context.sent;\n          // THEN SEND TO REDUX\n          console.log('saga response!', infoStylesResponse.data); // PUT IS DISPATCH\n\n          _context.next = 7;\n          return put({\n            type: 'SET_STYLE',\n            payload: infoStylesResponse.data\n          });\n\n        case 7:\n          _context.next = 12;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 9]]);\n}\n\nfunction putStyleInfo(action) {\n  return _regeneratorRuntime.wrap(function putStyleInfo$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return axios.post(\"/api/sty\", action.payload);\n\n        case 3:\n          _context2.next = 5;\n          return put({\n            type: 'FETCH_STYLE_INFO'\n          });\n\n        case 5:\n          _context2.next = 10;\n          break;\n\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log('ERROR IN POST', _context2.t0);\n\n        case 10:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 7]]);\n} // function* removeBatchInfo(action) {\n//     try{\n//         console.log(action.payload);\n//         let id = action.payload.id\n//         console.log(id);\n//         yield axios.delete(`/api/batch/${id}`, {user_id: action.payload});\n//         yield put ({\n//             type: 'FETCH_BATCH_INFO'\n//         })\n//     }catch(error){\n//         console.log(error);\n//     }\n// }\n\n\nfunction styleSaga() {\n  return _regeneratorRuntime.wrap(function styleSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return takeLatest('FETCH_STYLES_INFO', fetchStyleInfo);\n\n        case 2:\n          _context3.next = 4;\n          return takeEvery('POST_STYLES', putStyleInfo);\n\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\n\nexport default styleSaga;","map":{"version":3,"sources":["/Users/mileslacek/prime/tier3/prime-solo-project-master/src/redux/sagas/styleSaga.js"],"names":["fetchStyleInfo","putStyleInfo","styleSaga","put","takeLatest","takeEvery","axios","get","infoStylesResponse","console","log","data","type","payload","action","post"],"mappings":";;;;yBAIUA,c;;;yBAiBAC,Y;;;yBAmCAC,S;;AAxDV,SAASC,GAAT,EAAcC,UAAd,EAA0BC,SAA1B,QAA2C,oBAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,SAAUN,cAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGmC,iBAAMM,KAAK,CAACC,GAAN,cAAN;;AAHnC;AAGcC,UAAAA,kBAHd;AAIQ;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,kBAAkB,CAACG,IAAjD,EALR,CAMQ;;AANR;AAOQ,iBAAMR,GAAG,CAAE;AACPS,YAAAA,IAAI,EAAE,WADC;AAEPC,YAAAA,OAAO,EAAEL,kBAAkB,CAACG;AAFrB,WAAF,CAAT;;AAPR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAaQF,UAAAA,OAAO,CAACC,GAAR;;AAbR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAiBA,SAAUT,YAAV,CAAuBa,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGQ,iBAAMR,KAAK,CAACS,IAAN,aAAuBD,MAAM,CAACD,OAA9B,CAAN;;AAHR;AAAA;AAYQ,iBAAMV,GAAG,CAAE;AACPS,YAAAA,IAAI,EAAE;AADC,WAAF,CAAT;;AAZR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAgBQH,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;;AAhBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAoBA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAAUR,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAME,UAAU,CAAC,mBAAD,EAAsBJ,cAAtB,CAAhB;;AADJ;AAAA;AAEI,iBAAMK,SAAS,CAAC,aAAD,EAAgBJ,YAAhB,CAAf;;AAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMA,eAAeC,SAAf","sourcesContent":["import { put, takeLatest, takeEvery } from \"redux-saga/effects\";\nimport axios from \"axios\";\n\n\nfunction* fetchStyleInfo() {\n    try{\n        // GET THE INFO FROM OUR SERVER\n        const infoStylesResponse = yield axios.get(`/api/style`);\n        // THEN SEND TO REDUX\n        console.log('saga response!', infoStylesResponse.data);\n        // PUT IS DISPATCH\n        yield put ({\n            type: 'SET_STYLE',\n            payload: infoStylesResponse.data\n        });\n        \n    }catch (error) {\n        console.log(error);\n    }\n}\n\nfunction* putStyleInfo(action) {\n    try{\n        // POST THE ITEMS FROM OUR SERVER\n        yield axios.post(`/api/sty`, action.payload)\n        // {beer_style: action.payload.beer_style},\n        // {beer_name: action.payload.beer_name},\n        // {batch_number: action.payload.batch_number},\n        // {hlt_temp: action.payload.hlt_temp},\n        // {mash_in_temp: action.payload.mash_in_temp},\n        // {mash_out_temp: action.payload.mash_out_temp},\n        // {boil_time: action.payload.boil_time},\n        // {notes: action.payload.notes});\n        yield put ({\n            type: 'FETCH_STYLE_INFO',\n        })\n    }catch(error){\n        console.log('ERROR IN POST', error);\n    }\n}\n\n// function* removeBatchInfo(action) {\n//     try{\n//         console.log(action.payload);\n//         let id = action.payload.id\n//         console.log(id);\n        \n//         yield axios.delete(`/api/batch/${id}`, {user_id: action.payload});\n//         yield put ({\n//             type: 'FETCH_BATCH_INFO'\n//         })\n//     }catch(error){\n//         console.log(error);\n//     }\n// }\n\nfunction* styleSaga() {\n    yield takeLatest('FETCH_STYLES_INFO', fetchStyleInfo);\n    yield takeEvery('POST_STYLES', putStyleInfo);\n    // yield takeLatest('DELETE_STYLES_BATCH', removeStyleInfo);\n}\n\nexport default styleSaga;"]},"metadata":{},"sourceType":"module"}