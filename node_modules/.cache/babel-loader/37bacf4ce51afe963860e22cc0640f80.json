{"ast":null,"code":"import _classCallCheck from \"/Users/mileslacek/prime/tier3/prime-solo-project-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mileslacek/prime/tier3/prime-solo-project-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mileslacek/prime/tier3/prime-solo-project-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mileslacek/prime/tier3/prime-solo-project-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mileslacek/prime/tier3/prime-solo-project-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mileslacek/prime/tier3/prime-solo-project-master/src/components/EditBatchPage/EditBatchPage.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\n\nvar EditBatchPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditBatchPage, _Component);\n\n  function EditBatchPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditBatchPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditBatchPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.fetchbatch = function () {\n      var id = _this.props.match.params.id;\n\n      _this.props.dispatch({\n        type: \"FETCH_BATCH_ITEM\",\n        payload: id\n      });\n    };\n\n    _this.updateBatch = function (event) {\n      // event.preventDefault();\n      var update = {\n        style_id: _this.props.reduxStore.editReducer.style_id,\n        beer_name: _this.props.reduxStore.editReducer.beer_name,\n        batch_name: _this.props.reduxStore.editReducer.batch_name,\n        temp_hlt: _this.props.reduxStore.editReducer.temp_hlt,\n        temp_mash_in: _this.props.reduxStore.editReducer.temp_mash_in,\n        temp_mash_out: _this.props.reduxStore.editReducer.temp_mash_out,\n        time_boil: _this.props.reduxStore.editReducer.time_boil,\n        notes: _this.props.reduxStore.editReducer.notes,\n        id: _this.props.reduxStore.editReducer.id\n      };\n      console.log(\"update\", update);\n\n      _this.props.dispatch({\n        type: \"UPDATE\",\n        payload: update\n      });\n\n      _this.toLogBook();\n    };\n\n    _this.toLogBook = function () {\n      _this.props.history.push(\"/logbook\"); // brings the user to logbook\n\n    };\n\n    _this.toHome = function () {\n      _this.props.history.push(\"/\"); // brings the user to home\n\n    };\n\n    return _this;\n  }\n\n  _createClass(EditBatchPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // this.props.dispatch({\n      //   type: \"FETCH_BATCH_INFO\"\n      // });\n      // this.props.dispatch({\n      //   type: \"FETCH_BATCH_ITEM\"\n      // });\n      this.fetchbatch();\n      this.props.dispatch({\n        type: \"FETCH_STYLES_INFO\"\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.updateBatch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"sel1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Beer Style: \"), React.createElement(\"select\", {\n        value: this.props.reduxStore.eReducer.beer_type,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"None\"), React.createElement(\"option\", {\n        key: style.id,\n        value: style.beer_type,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, style.beer_type)), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })), React.createElement(TextField, {\n        label: \"Edit Beer Name:\",\n        value: this.props.reduxStore.editReducer.beer_name,\n        onChange: function onChange(event) {\n          return _this2.props.dispatch({\n            type: \"UPDATE\",\n            payload: {\n              propertyName: \"beer_name\",\n              value: event.target.value\n            }\n          });\n        },\n        fullWidth: true,\n        InputLabelProps: {\n          shrink: this.props.reduxStore.editReducer.beer_name\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        label: \"Edit Batch Number:\",\n        value: this.props.reduxStore.editReducer.batch_name,\n        onChange: function onChange(event) {\n          return _this2.props.dispatch({\n            type: \"UPDATE\",\n            payload: {\n              propertyName: \"batch_name\",\n              value: event.target.value\n            }\n          });\n        },\n        fullWidth: true,\n        InputLabelProps: {\n          shrink: this.props.reduxStore.editReducer.batch_name\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        label: \"Edit Hot Liquor Tank Temp:\",\n        value: this.props.reduxStore.editReducer.temp_hlt,\n        onChange: function onChange(event) {\n          return _this2.props.dispatch({\n            type: \"UPDATE\",\n            payload: {\n              propertyName: \"temp_hlt\",\n              value: event.target.value\n            }\n          });\n        },\n        fullWidth: true,\n        InputLabelProps: {\n          shrink: this.props.reduxStore.editReducer.temp_hlt\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        label: \"Edit Mash-In Temp:\",\n        value: this.props.reduxStore.editReducer.temp_mash_in,\n        onChange: function onChange(event) {\n          return _this2.props.dispatch({\n            type: \"UPDATE\",\n            payload: {\n              propertyName: \"temp_mash_in\",\n              value: event.target.value\n            }\n          });\n        },\n        fullWidth: true,\n        InputLabelProps: {\n          shrink: this.props.reduxStore.editReducer.temp_mash_in\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        label: \"Edit Mash-Out Temp:\",\n        value: this.props.reduxStore.editReducer.temp_mash_out,\n        onChange: function onChange(event) {\n          return _this2.props.dispatch({\n            type: \"UPDATE\",\n            payload: {\n              propertyName: \"temp_mash_out\",\n              value: event.target.value\n            }\n          });\n        },\n        fullWidth: true,\n        InputLabelProps: {\n          shrink: this.props.reduxStore.editReducer.temp_mash_out\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        label: \"Edit Time of Boil:\",\n        value: this.props.reduxStore.editReducer.time_boil,\n        onChange: function onChange(event) {\n          return _this2.props.dispatch({\n            type: \"UPDATE\",\n            payload: {\n              propertyName: \"time_boil\",\n              value: event.target.value\n            }\n          });\n        },\n        fullWidth: true,\n        InputLabelProps: {\n          shrink: this.props.reduxStore.editReducer.time_boil\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        label: \"Edit Notes:\",\n        value: this.props.reduxStore.editReducer.notes,\n        onChange: function onChange(event) {\n          return _this2.props.dispatch({\n            type: \"UPDATE\",\n            payload: {\n              propertyName: \"notes\",\n              value: event.target.value\n            }\n          });\n        },\n        fullWidth: true,\n        InputLabelProps: {\n          shrink: this.props.reduxStore.editReducer.notes\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, \"Submit to Brew Log\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.toLogBook,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, \"GO TO LOG BOOK\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.toHome,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, \"GO TO HOME PAGE\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return EditBatchPage;\n}(Component);\n\n;\n\nvar mapStateToProps = function mapStateToProps(reduxStore) {\n  return {\n    reduxStore: reduxStore\n  };\n};\n\nexport default connect(mapStateToProps)(EditBatchPage);","map":{"version":3,"sources":["/Users/mileslacek/prime/tier3/prime-solo-project-master/src/components/EditBatchPage/EditBatchPage.js"],"names":["React","Component","connect","Button","TextField","EditBatchPage","fetchbatch","id","props","match","params","dispatch","type","payload","updateBatch","event","update","style_id","reduxStore","editReducer","beer_name","batch_name","temp_hlt","temp_mash_in","temp_mash_out","time_boil","notes","console","log","toLogBook","history","push","toHome","eReducer","beer_type","handleChange","style","propertyName","value","target","shrink","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\n\nclass EditBatchPage extends Component {\n  componentDidMount() {\n    // this.props.dispatch({\n    //   type: \"FETCH_BATCH_INFO\"\n\n    // });\n\n    // this.props.dispatch({\n    //   type: \"FETCH_BATCH_ITEM\"\n    // });\n    this.fetchbatch();\n\n    this.props.dispatch({\n      type: \"FETCH_STYLES_INFO\"\n    });\n  }\n\n  fetchbatch = () => {\n    let id = this.props.match.params.id;\n    this.props.dispatch({\n      type: \"FETCH_BATCH_ITEM\",\n      payload: id\n    });\n  };\n\n\n  updateBatch = event => {\n    // event.preventDefault();\n\n    let update = {\n      style_id: this.props.reduxStore.editReducer.style_id,\n      beer_name: this.props.reduxStore.editReducer.beer_name,\n      batch_name: this.props.reduxStore.editReducer.batch_name,\n      temp_hlt: this.props.reduxStore.editReducer.temp_hlt,\n      temp_mash_in: this.props.reduxStore.editReducer.temp_mash_in,\n      temp_mash_out: this.props.reduxStore.editReducer.temp_mash_out,\n      time_boil: this.props.reduxStore.editReducer.time_boil,\n      notes: this.props.reduxStore.editReducer.notes,\n      id: this.props.reduxStore.editReducer.id\n    };\n\n    console.log(\"update\", update);\n    this.props.dispatch({\n      type: \"UPDATE\",\n      payload: update\n    });\n    this.toLogBook();\n  };\n\n  toLogBook = () => {\n    this.props.history.push(`/logbook`); // brings the user to logbook\n  };\n\n  toHome = () => {\n    this.props.history.push(`/`); // brings the user to home\n  };\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.updateBatch}>\n          <div class=\"form-group\">\n            <label for=\"sel1\">Beer Style: </label>\n              <select value={this.props.reduxStore.eReducer.beer_type} onChange={this.handleChange}>\n                 <option value=\"\">None</option>\n              {/* {this.props.reduxStore.styleReducer.map(style => {\n                return ( */}\n                  <option key={style.id} value={style.beer_type}>\n                    {style.beer_type}\n                  </option>\n              </select>\n            <input type=\"submit\" value=\"Submit\" />\n\n            {/* <select\n              value={this.props.reduxStore.editReducer.value}\n              onSubmit={this.handleSubmit}\n              className=\"form-control\"\n              onChange={this.handleChange}\n            >\n              <option value=\"\">None</option>\n              {this.props.reduxStore.styleReducer.map(style => {\n                return (\n                  <option key={style.id} value={style.beer_type}>\n                    {style.beer_type}\n                  </option>\n                );\n              })}\n            </select> */}\n          </div>\n          <TextField\n            label=\"Edit Beer Name:\"\n            value={this.props.reduxStore.editReducer.beer_name}\n            onChange={event =>\n              this.props.dispatch({\n                type: \"UPDATE\",\n                payload: {\n                  propertyName: \"beer_name\",\n                  value: event.target.value\n                }\n              })\n            }\n            fullWidth\n            InputLabelProps={{\n              shrink: this.props.reduxStore.editReducer.beer_name\n            }}\n          />\n          <TextField\n            label=\"Edit Batch Number:\"\n            value={this.props.reduxStore.editReducer.batch_name}\n            onChange={event =>\n              this.props.dispatch({\n                type: \"UPDATE\",\n                payload: {\n                  propertyName: \"batch_name\",\n                  value: event.target.value\n                }\n              })\n            }\n            fullWidth\n            InputLabelProps={{\n              shrink: this.props.reduxStore.editReducer.batch_name\n            }}\n          />\n          <br></br>\n          <TextField\n            label=\"Edit Hot Liquor Tank Temp:\"\n            value={this.props.reduxStore.editReducer.temp_hlt}\n            onChange={event =>\n              this.props.dispatch({\n                type: \"UPDATE\",\n                payload: {\n                  propertyName: \"temp_hlt\",\n                  value: event.target.value\n                }\n              })\n            }\n            fullWidth\n            InputLabelProps={{\n              shrink: this.props.reduxStore.editReducer.temp_hlt\n            }}\n          />\n          <br></br>\n          <TextField\n            label=\"Edit Mash-In Temp:\"\n            value={this.props.reduxStore.editReducer.temp_mash_in}\n            onChange={event =>\n              this.props.dispatch({\n                type: \"UPDATE\",\n                payload: {\n                  propertyName: \"temp_mash_in\",\n                  value: event.target.value\n                }\n              })\n            }\n            fullWidth\n            InputLabelProps={{\n              shrink: this.props.reduxStore.editReducer.temp_mash_in\n            }}\n          />\n          <br></br>\n          <TextField\n            label=\"Edit Mash-Out Temp:\"\n            value={this.props.reduxStore.editReducer.temp_mash_out}\n            onChange={event =>\n              this.props.dispatch({\n                type: \"UPDATE\",\n                payload: {\n                  propertyName: \"temp_mash_out\",\n                  value: event.target.value\n                }\n              })\n            }\n            fullWidth\n            InputLabelProps={{\n              shrink: this.props.reduxStore.editReducer.temp_mash_out\n            }}\n          />\n          <br></br>\n          <TextField\n            label=\"Edit Time of Boil:\"\n            value={this.props.reduxStore.editReducer.time_boil}\n            onChange={event =>\n              this.props.dispatch({\n                type: \"UPDATE\",\n                payload: {\n                  propertyName: \"time_boil\",\n                  value: event.target.value\n                }\n              })\n            }\n            fullWidth\n            InputLabelProps={{\n              shrink: this.props.reduxStore.editReducer.time_boil\n            }}\n          />\n          <br></br>\n          <TextField\n            label=\"Edit Notes:\"\n            value={this.props.reduxStore.editReducer.notes}\n            onChange={event =>\n              this.props.dispatch({\n                type: \"UPDATE\",\n                payload: {\n                  propertyName: \"notes\",\n                  value: event.target.value\n                }\n              })\n            }\n            fullWidth\n            InputLabelProps={{\n              shrink: this.props.reduxStore.editReducer.notes\n            }}\n          />\n          <br></br>\n          <br></br>\n          <Button variant=\"contained\" color=\"secondary\" type=\"submit\">\n            Submit to Brew Log\n          </Button>\n        </form>\n        <br></br>\n        <Button onClick={this.toLogBook}>GO TO LOG BOOK</Button>\n        <br></br>\n        <Button onClick={this.toHome}>GO TO HOME PAGE</Button>\n        <br></br>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = reduxStore => {\n    return{\n        reduxStore\n    };\n};\n\nexport default connect(mapStateToProps)(EditBatchPage);"]},"metadata":{},"sourceType":"module"}