{"ast":null,"code":"import _defineProperty from \"/Users/mileslacek/prime/tier3/prime-solo-project-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar batchReducer = function batchReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"SET_INFO\":\n      return action.payload;\n\n    case \"UPDATE\":\n      return _objectSpread({}, state, _defineProperty({}, action.payload.propertyName, action.payload.value));\n\n    default:\n      return state;\n  }\n};\n\nexport default batchReducer;","map":{"version":3,"sources":["/Users/mileslacek/prime/tier3/prime-solo-project-master/src/redux/reducers/batchReducer.js"],"names":["batchReducer","state","action","type","payload","propertyName","value"],"mappings":";;;;;;AAAA,IAAMA,YAAY,GAAG,SAAfA,YAAe,GAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,aAAOD,MAAM,CAACE,OAAd;;AACF,SAAK,QAAL;AACE,+BACKH,KADL,sBAEGC,MAAM,CAACE,OAAP,CAAeC,YAFlB,EAEiCH,MAAM,CAACE,OAAP,CAAeE,KAFhD;;AAIF;AACE,aAAOL,KAAP;AATJ;AAWD,CAZD;;AAcA,eAAeD,YAAf","sourcesContent":["const batchReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"SET_INFO\":\n      return action.payload;\n    case \"UPDATE\":\n      return {\n        ...state,\n        [action.payload.propertyName]: action.payload.value\n      };\n    default:\n      return state;\n  }\n};\n\nexport default batchReducer;\n"]},"metadata":{},"sourceType":"module"}