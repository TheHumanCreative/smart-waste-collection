{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/mileslacek/prime/tier3/prime-solo-project-master/src/components/UserPage/UserPage.js\";\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport LogOutButton from '../LogOutButton/LogOutButton';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Grid } from \"@material-ui/core\"; // this could also be written with destructuring parameters as:\n// const UserPage = ({ user }) => (\n// and then instead of `props.user.username` you could use `user.username`\n// class UserPage extends Component {\n//   render(){\n//     return (\n//       <div>\n//         <h1 id=\"welcome\">Welcome, {props.user.username}!</h1>\n//         <p>Your ID is: {props.user.id}</p>\n//         <div></div>\n//         <LogOutButton className=\"log-in\" />\n//       </div>\n//     );\n//   }\n// }\n\nvar styles = {\n  header: {\n    fontSize: \"34px\",\n    width: \"100%\",\n    minHeight: \"20vh\",\n    display: \"flex\",\n    // is fine as there is not a dash.\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    // fontSize: \"calc(10px + 2vmin)\",\n    color: \"white\"\n  },\n  Button: {\n    background: \"brown\",\n    color: \"white\",\n    border: \"1px solid black\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    \"&:hover\": {\n      // change to both KEY and the\n      // textDecoration: \"underline\",\n      color: \"black\"\n    }\n  },\n  main: {\n    backgroundImage: \"url('./images/homebrewery.jpg')\",\n    backgroundSize: \"100%\",\n    backgroundPosition: \"center center\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundAttachment: \"fixed\",\n    height: \"2000px\"\n  }\n};\n\nvar UserPage = function UserPage(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    id: \"welcome\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Welcome, \", props.user.username, \"!\"), React.createElement(\"image\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"className=\", _this.props.classes.i), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Your ID is: \", props.user.id), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(LogOutButton, {\n    className: \"log-in\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }));\n}; // Instead of taking everything from state, we just want the user info.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({user}) => ({ user });\n\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}; // this allows us to use <App /> in index.js\n\n\nexport default connect(mapStateToProps)(withStyles(styles)(UserPage));","map":{"version":3,"sources":["/Users/mileslacek/prime/tier3/prime-solo-project-master/src/components/UserPage/UserPage.js"],"names":["React","connect","LogOutButton","withStyles","Grid","styles","header","fontSize","width","minHeight","display","flexDirection","alignItems","justifyContent","color","Button","background","border","main","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","backgroundAttachment","height","UserPage","props","user","username","classes","i","id","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,IAAT,QAAqB,mBAArB,C,CACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE,MADJ;AAENC,IAAAA,KAAK,EAAE,MAFD;AAGNC,IAAAA,SAAS,EAAE,MAHL;AAINC,IAAAA,OAAO,EAAE,MAJH;AAIW;AACjBC,IAAAA,aAAa,EAAE,QALT;AAMNC,IAAAA,UAAU,EAAE,QANN;AAONC,IAAAA,cAAc,EAAE,QAPV;AAQN;AACAC,IAAAA,KAAK,EAAE;AATD,GADK;AAYbC,EAAAA,MAAM,EAAE;AACNC,IAAAA,UAAU,EAAE,OADN;AAENF,IAAAA,KAAK,EAAE,OAFD;AAGNG,IAAAA,MAAM,EAAE,iBAHF;AAINN,IAAAA,aAAa,EAAE,QAJT;AAKNC,IAAAA,UAAU,EAAE,QALN;AAMNC,IAAAA,cAAc,EAAE,QANV;AAON,eAAW;AACT;AACA;AACAC,MAAAA,KAAK,EAAE;AAHE;AAPL,GAZK;AAyBbI,EAAAA,IAAI,EAAE;AACJC,IAAAA,eAAe,EAAE,iCADb;AAEJC,IAAAA,cAAc,EAAE,MAFZ;AAGJC,IAAAA,kBAAkB,EAAE,eAHhB;AAIJC,IAAAA,gBAAgB,EAAE,WAJd;AAKJC,IAAAA,oBAAoB,EAAE,OALlB;AAMJC,IAAAA,MAAM,EAAE;AANJ;AAzBO,CAAf;;AAkCA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK;AAAA,SACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,EAAE,EAAC,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA2BA,KAAK,CAACC,IAAN,CAAWC,QAAtC,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAkB,KAAI,CAACF,KAAL,CAAWG,OAAX,CAAmBC,CAArC,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAgBJ,KAAK,CAACC,IAAN,CAAWI,EAA3B,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAC,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADoB;AAAA,CAAtB,C,CAUA;AACA;AACA;;;AACA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCN,IAAAA,IAAI,EAAEM,KAAK,CAACN;AADoB,GAAL;AAAA,CAA7B,C,CAIA;;;AACA,eAAe1B,OAAO,CAAC+B,eAAD,CAAP,CAAyB7B,UAAU,CAACE,MAAD,CAAV,CAAmBoB,QAAnB,CAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport LogOutButton from '../LogOutButton/LogOutButton';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Grid } from \"@material-ui/core\";\n// this could also be written with destructuring parameters as:\n// const UserPage = ({ user }) => (\n// and then instead of `props.user.username` you could use `user.username`\n\n// class UserPage extends Component {\n  \n//   render(){\n//     return (\n//       <div>\n//         <h1 id=\"welcome\">Welcome, {props.user.username}!</h1>\n//         <p>Your ID is: {props.user.id}</p>\n//         <div></div>\n//         <LogOutButton className=\"log-in\" />\n//       </div>\n//     );\n//   }\n// }\n\nconst styles = {\n  header: {\n    fontSize: \"34px\",\n    width: \"100%\",\n    minHeight: \"20vh\",\n    display: \"flex\", // is fine as there is not a dash.\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    // fontSize: \"calc(10px + 2vmin)\",\n    color: \"white\"\n  },\n  Button: {\n    background: \"brown\",\n    color: \"white\",\n    border: \"1px solid black\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    \"&:hover\": {\n      // change to both KEY and the\n      // textDecoration: \"underline\",\n      color: \"black\"\n    }\n  },\n  main: {\n    backgroundImage: \"url('./images/homebrewery.jpg')\",\n    backgroundSize: \"100%\",\n    backgroundPosition: \"center center\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundAttachment: \"fixed\",\n    height: \"2000px\"\n  }\n};\nconst UserPage = props => (\n  <div>\n    <h1 id=\"welcome\">Welcome, {props.user.username}!</h1>\n    <image>className={this.props.classes.i}</image>\n    <p>Your ID is: {props.user.id}</p>\n    <div></div>\n    <LogOutButton className=\"log-in\" />\n  </div>\n);\n\n// Instead of taking everything from state, we just want the user info.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({user}) => ({ user });\nconst mapStateToProps = state => ({\n  user: state.user,\n});\n\n// this allows us to use <App /> in index.js\nexport default connect(mapStateToProps)(withStyles(styles)(UserPage));\n"]},"metadata":{},"sourceType":"module"}