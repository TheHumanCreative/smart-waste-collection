{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mileslacek/prime/tier3/prime-solo-project-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchBatchItem),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(updateBatchItem),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(editSaga);\n\nimport { put, takeLatest, takeEvery } from \"redux-saga/effects\";\nimport axios from \"axios\";\n\nfunction fetchBatchItem() {\n  var infoBatchResponse;\n  return _regeneratorRuntime.wrap(function fetchBatchItem$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return axios.get(\"/api/edit\");\n\n        case 3:\n          infoBatchResponse = _context.sent;\n          // THEN SEND TO REDUX\n          console.log('saga response!', infoBatchResponse.data); // PUT IS DISPATCH\n\n          _context.next = 7;\n          return put({\n            type: 'SET_ITEM',\n            payload: infoBatchResponse.data\n          });\n\n        case 7:\n          _context.next = 12;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 9]]);\n}\n\nfunction updateBatchItem(action) {\n  return _regeneratorRuntime.wrap(function updateBatchItem$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          console.log(\"updating Batch:\", action.payload);\n          _context2.prev = 1;\n          _context2.next = 4;\n          return axios.put(\"/edit/:id\", action.payload);\n\n        case 4:\n          _context2.next = 6;\n          return put({\n            type: \"SET_ITEM\",\n            payload: action.payload.id\n          });\n\n        case 6:\n          _context2.next = 11;\n          break;\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](1);\n          console.log(\"Error in PUT\", _context2.t0);\n\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[1, 8]]);\n}\n\nfunction editSaga() {\n  return _regeneratorRuntime.wrap(function editSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return takeLatest(\"FETCH_BATCH_ITEM\", fetchBatchItem);\n\n        case 2:\n          _context3.next = 4;\n          return takeEvery(\"UPDATE\", updateBatchItem);\n\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\n\nexport default editSaga;","map":{"version":3,"sources":["/Users/mileslacek/prime/tier3/prime-solo-project-master/src/redux/sagas/editSaga.js"],"names":["fetchBatchItem","updateBatchItem","editSaga","put","takeLatest","takeEvery","axios","get","infoBatchResponse","console","log","data","type","payload","action","id"],"mappings":";;;;yBAGUA,c;;;yBAqBAC,e;;;yBAaAC,Q;;AArCV,SAASC,GAAT,EAAcC,UAAd,EAA0BC,SAA1B,QAA2C,oBAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAAUN,cAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIkC,iBAAMM,KAAK,CAACC,GAAN,aAAN;;AAJlC;AAIcC,UAAAA,iBAJd;AAKQ;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,iBAAiB,CAACG,IAAhD,EANR,CAOQ;;AAPR;AAQQ,iBAAMR,GAAG,CAAE;AACPS,YAAAA,IAAI,EAAE,UADC;AAEPC,YAAAA,OAAO,EAAEL,iBAAiB,CAACG;AAFpB,WAAF,CAAT;;AARR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAcQF,UAAAA,OAAO,CAACC,GAAR;;AAdR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAqBA,SAAUT,eAAV,CAA0Ba,MAA1B;AAAA;AAAA;AAAA;AAAA;AACEL,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BI,MAAM,CAACD,OAAtC;AADF;AAAA;AAGI,iBAAMP,KAAK,CAACH,GAAN,cAAuBW,MAAM,CAACD,OAA9B,CAAN;;AAHJ;AAAA;AAII,iBAAMV,GAAG,CAAC;AACRS,YAAAA,IAAI,EAAE,UADE;AAERC,YAAAA,OAAO,EAAEC,MAAM,CAACD,OAAP,CAAeE;AAFhB,WAAD,CAAT;;AAJJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AASIN,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;;AATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAaA,SAAUR,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAME,UAAU,CAAC,kBAAD,EAAqBJ,cAArB,CAAhB;;AADF;AAAA;AAEE,iBAAMK,SAAS,CAAC,QAAD,EAAWJ,eAAX,CAAf;;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKA,eAAeC,QAAf","sourcesContent":["import { put, takeLatest, takeEvery } from \"redux-saga/effects\";\nimport axios from \"axios\";\n\nfunction* fetchBatchItem() {\n\n    try{\n        // GET THE INFO FROM OUR SERVER\n        const infoBatchResponse = yield axios.get(`/api/edit`);\n        // THEN SEND TO REDUX\n        console.log('saga response!', infoBatchResponse.data);\n        // PUT IS DISPATCH\n        yield put ({\n            type: 'SET_ITEM',\n            payload: infoBatchResponse.data\n        });\n        \n    }catch (error) {\n        console.log(error);\n    }\n}\n\n\n\n\nfunction* updateBatchItem(action) {\n  console.log(\"updating Batch:\", action.payload);\n  try {\n    yield axios.put(`/edit/:id`, action.payload);\n    yield put({\n      type: \"SET_ITEM\",\n      payload: action.payload.id\n    });\n  } catch (error) {\n    console.log(\"Error in PUT\", error);\n  }\n}\n\nfunction* editSaga() {\n  yield takeLatest(\"FETCH_BATCH_ITEM\", fetchBatchItem);\n  yield takeEvery(\"UPDATE\", updateBatchItem);\n}\n\nexport default editSaga;"]},"metadata":{},"sourceType":"module"}