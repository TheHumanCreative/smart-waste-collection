{"ast":null,"code":"import { combineReducers } from 'redux';\nimport errors from './errorsReducer';\nimport loginMode from './loginModeReducer';\nimport user from './userReducer';\nimport batchReducer from './batchReducer';\nimport styleReducer from './styleReducer';\nimport editReducer from './editReducer'; // rootReducer is the primary reducer for our entire project\n// It bundles up all of the other reducers so our project can use them.\n// This is imported in index.js as rootSaga\n// Lets make a bigger object for our store, with the objects from our reducers.\n// This is what we get when we use 'state' inside of 'mapStateToProps'\n\nvar rootReducer = combineReducers({\n  errors: errors,\n  // contains registrationMessage and loginMessage\n  loginMode: loginMode,\n  // will have a value of 'login' or 'registration' to control which screen is shown\n  user: user,\n  // will have an id and username if someone is logged in\n  batchReducer: batchReducer,\n  //will contain the item posted in form input\n  styleReducer: styleReducer,\n  //will contain the styles from the style table in Database\n  editReducer: editReducer //will contain the one batch from the data\n\n});\nexport default rootReducer;","map":{"version":3,"sources":["/Users/mileslacek/prime/tier3/prime-solo-project-master/src/redux/reducers/index.js"],"names":["combineReducers","errors","loginMode","user","batchReducer","styleReducer","editReducer","rootReducer"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB,C,CACA;AACA;AACA;AAEA;AACA;;AACA,IAAMC,WAAW,GAAGP,eAAe,CAAC;AAClCC,EAAAA,MAAM,EAANA,MADkC;AAC1B;AACRC,EAAAA,SAAS,EAATA,SAFkC;AAEvB;AACXC,EAAAA,IAAI,EAAJA,IAHkC;AAG5B;AACNC,EAAAA,YAAY,EAAZA,YAJkC;AAIpB;AACdC,EAAAA,YAAY,EAAZA,YALkC;AAKpB;AACdC,EAAAA,WAAW,EAAXA,WANkC,CAMrB;;AANqB,CAAD,CAAnC;AASA,eAAeC,WAAf","sourcesContent":["import { combineReducers } from 'redux';\nimport errors from './errorsReducer';\nimport loginMode from './loginModeReducer';\nimport user from './userReducer';\nimport batchReducer from './batchReducer';\nimport styleReducer from './styleReducer';\nimport editReducer from './editReducer';\n// rootReducer is the primary reducer for our entire project\n// It bundles up all of the other reducers so our project can use them.\n// This is imported in index.js as rootSaga\n\n// Lets make a bigger object for our store, with the objects from our reducers.\n// This is what we get when we use 'state' inside of 'mapStateToProps'\nconst rootReducer = combineReducers({\n  errors, // contains registrationMessage and loginMessage\n  loginMode, // will have a value of 'login' or 'registration' to control which screen is shown\n  user, // will have an id and username if someone is logged in\n  batchReducer, //will contain the item posted in form input\n  styleReducer, //will contain the styles from the style table in Database\n  editReducer, //will contain the one batch from the data\n});\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}