{"ast":null,"code":"import _classCallCheck from \"/Users/mileslacek/prime/tier3/prime-solo-project-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mileslacek/prime/tier3/prime-solo-project-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mileslacek/prime/tier3/prime-solo-project-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mileslacek/prime/tier3/prime-solo-project-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mileslacek/prime/tier3/prime-solo-project-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mileslacek/prime/tier3/prime-solo-project-master/src/components/CreateBatchPage/CreateBatchPage.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\"; //This is the Create Batch page and will have the user able to:\n// Create a Batch\n// Name a Batch\n// Input temps and time\n// Submit the data to the database and be alerted if they are\n// Unsuccessful ADD to Database AND Successful ADD to the Database.\n\nvar CreateBatchPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateBatchPage, _Component);\n\n  function CreateBatchPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CreateBatchPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CreateBatchPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      beer_type: \"\",\n      beer_name: \"\",\n      batch_name: \"\",\n      temp_hlt: \"\",\n      mash_in_temp: \"\",\n      mash_out_temp: \"\",\n      time_boil: \"\",\n      notes: \"\"\n    };\n\n    _this.handlePost = function (event) {\n      event.preventDefault();\n      console.log(\"Submit Button has been Clicked\");\n\n      _this.props.dispatch({\n        type: \"POST_INFO\",\n        payload: _this.state\n      });\n    };\n\n    _this.handleChangeBeerType = function (event) {\n      _this.setState({\n        beer_type: event.target.value\n      });\n    };\n\n    _this.handleChangeBeerName = function (event) {\n      _this.setState({\n        beer_name: event.target.value\n      });\n    };\n\n    _this.handleChangeBatchNumber = function (event) {\n      _this.setState({\n        batch_name: event.target.value\n      });\n    };\n\n    _this.handleChangeHotLiquor = function (event) {\n      _this.setState({\n        temp_hlt: event.target.value\n      });\n    };\n\n    _this.handleChangeMashIn = function (event) {\n      _this.setState({\n        mash_in_temp: event.target.value\n      });\n    };\n\n    _this.handleChangeMashOut = function (event) {\n      _this.setState({\n        mash_out_temp: event.target.value\n      });\n    };\n\n    _this.handleChangeBoilTime = function (event) {\n      _this.setState({\n        time_boil: event.target.value\n      });\n    };\n\n    _this.handleChangeNotes = function (event) {\n      _this.setState({\n        notes: event.target.value\n      });\n    };\n\n    _this.toLogBook = function (id) {\n      _this.props.history.push(\"/logbook\"); // brings the user to logbook\n\n    };\n\n    _this.toHome = function () {\n      _this.props.history.push(\"/\"); // brings the user to home\n\n    };\n\n    return _this;\n  }\n\n  _createClass(CreateBatchPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.dispatch({\n        type: \"FETCH_BATCH_INFO\"\n      });\n      this.props.dispatch({\n        type: \"FETCH_STYLES_INFO\"\n      });\n    }\n  }, {\n    key: \"handleDelete\",\n    value: function handleDelete(id, user_id) {\n      console.log(\"this is the id to be DELETED:\", id);\n      console.log(\"this is the user who will be DELETED\", user_id);\n      this.props.dispatch({\n        type: \"DELETE_USER_BATCH\",\n        payload: {\n          id: id,\n          user_id: user_id\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        id: \"table1\",\n        onSubmit: this.handlePost,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"sel1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Beer Style:\"), React.createElement(\"select\", {\n        className: \"form-control\" // NEED TO GET THIS TO SHOW ALLL THE STYLES NOT JUST WHAT IS IN THE REDUCER.\n        ,\n        onChange: function onChange(event) {\n          return _this2.handleChange(\"style_id\", event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"None\"), this.props.reduxStore.batchReducer.map(function (style) {\n        return React.createElement(\"option\", {\n          key: style.id,\n          value: style.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, style.beer_type);\n      }))), React.createElement(\"label\", {\n        for: \"sel1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"Name your Beer: \"), React.createElement(\"input\", {\n        class: \"batchForm\",\n        onChange: this.handleChangeBeerName,\n        type: \"text\",\n        placeholder: \"Name the Beer / Batch\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        for: \"sel1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, \"Give the batch a number: \"), React.createElement(\"input\", {\n        class: \"batchForm\",\n        onChange: this.handleChangeBatchNumber,\n        type: \"text\",\n        placeholder: \"Give your batch a number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        for: \"sel1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"Hot-Liquor-Tank Temp: \"), React.createElement(\"input\", {\n        class: \"batchForm\",\n        onChange: this.handleChangeHotLiquor,\n        type: \"text\",\n        placeholder: \"Please log the HLT Temp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        for: \"sel1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, \"Mash-In-Temp: \"), React.createElement(\"input\", {\n        class: \"batchForm\",\n        onChange: this.handleChangeMashIn,\n        type: \"text\",\n        placeholder: \"Please log the Mash-In Temp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        for: \"sel1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, \"Mash-Out-Temp: \"), React.createElement(\"input\", {\n        class: \"batchForm\",\n        onChange: this.handleChangeMashOut,\n        type: \"text\",\n        placeholder: \"Please log the Mash-In Temp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        for: \"sel1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"Boil Time: \"), React.createElement(\"input\", {\n        class: \"batchForm\",\n        onChange: this.handleChangeBoilTime,\n        type: \"text\",\n        placeholder: \"Please log the Boil Time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        for: \"sel1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, \"Please leave detailed notes: \"), React.createElement(\"input\", {\n        class: \"batchForm\",\n        onChange: this.handleChangeNotes,\n        type: \"text\",\n        placeholder: \"Please log any notes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, \"Submit to Brew Log\")), React.createElement(Button, {\n        onClick: this.toLogBook,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, \"GO TO LOG BOOK\"), React.createElement(Button, {\n        onClick: this.toHome,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, \"GO TO HOME PAGE\"));\n    }\n  }]);\n\n  return CreateBatchPage;\n}(Component);\n\n;\n\nvar mapStateToProps = function mapStateToProps(reduxStore) {\n  return {\n    reduxStore: reduxStore\n  };\n};\n\nexport default connect(mapStateToProps)(CreateBatchPage);","map":{"version":3,"sources":["/Users/mileslacek/prime/tier3/prime-solo-project-master/src/components/CreateBatchPage/CreateBatchPage.js"],"names":["React","Component","connect","Button","Grid","CreateBatchPage","state","beer_type","beer_name","batch_name","temp_hlt","mash_in_temp","mash_out_temp","time_boil","notes","handlePost","event","preventDefault","console","log","props","dispatch","type","payload","handleChangeBeerType","setState","target","value","handleChangeBeerName","handleChangeBatchNumber","handleChangeHotLiquor","handleChangeMashIn","handleChangeMashOut","handleChangeBoilTime","handleChangeNotes","toLogBook","id","history","push","toHome","user_id","handleChange","reduxStore","batchReducer","map","style","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\n//This is the Create Batch page and will have the user able to:\n// Create a Batch\n// Name a Batch\n// Input temps and time\n// Submit the data to the database and be alerted if they are\n// Unsuccessful ADD to Database AND Successful ADD to the Database.\n\nclass CreateBatchPage extends Component {\n  state = {\n    beer_type: \"\",\n    beer_name: \"\",\n    batch_name: \"\",\n    temp_hlt: \"\",\n    mash_in_temp: \"\",\n    mash_out_temp: \"\",\n    time_boil: \"\",\n    notes: \"\"\n  };\n\n  handlePost = event => {\n    event.preventDefault();\n    console.log(\"Submit Button has been Clicked\");\n    this.props.dispatch({\n      type: \"POST_INFO\",\n      payload: this.state\n    });\n  };\n\n  handle\n\n  handleChangeBeerType = event => {\n    this.setState({\n      beer_type: event.target.value\n    });\n  };\n\n  handleChangeBeerName = event => {\n    this.setState({\n      beer_name: event.target.value\n    });\n  };\n\n  handleChangeBatchNumber = event => {\n    this.setState({\n      batch_name: event.target.value\n    });\n  };\n\n  handleChangeHotLiquor = event => {\n    this.setState({\n      temp_hlt: event.target.value\n    });\n  };\n\n  handleChangeMashIn = event => {\n    this.setState({\n      mash_in_temp: event.target.value\n    });\n  };\n\n  handleChangeMashOut = event => {\n    this.setState({\n      mash_out_temp: event.target.value\n    });\n  };\n\n  handleChangeBoilTime = event => {\n    this.setState({\n      time_boil: event.target.value\n    });\n  };\n\n  handleChangeNotes = event => {\n    this.setState({\n      notes: event.target.value\n    });\n  };\n\n  componentDidMount() {\n    this.props.dispatch({\n      type: \"FETCH_BATCH_INFO\"\n    });\n\n    this.props.dispatch({\n      type: \"FETCH_STYLES_INFO\"\n    });\n  }\n\n  handleDelete(id, user_id) {\n    console.log(\"this is the id to be DELETED:\", id);\n    console.log(\"this is the user who will be DELETED\", user_id);\n    this.props.dispatch({\n      type: \"DELETE_USER_BATCH\",\n      payload: { id: id, user_id: user_id }\n    });\n  }\n\n  toLogBook = id => {\n    this.props.history.push(`/logbook`); // brings the user to logbook\n  };\n\n  toHome = () => {\n    this.props.history.push(`/`); // brings the user to home\n  };\n\n  render() {\n   \n    return (\n      <div>\n        <form id=\"table1\" onSubmit={this.handlePost}>\n          <div class=\"form-group\">\n            <label for=\"sel1\">Beer Style:</label>\n            {/* <select class=\"form-control\" id=\"sel1\"> */}\n              <select\n                className=\"form-control\" // NEED TO GET THIS TO SHOW ALLL THE STYLES NOT JUST WHAT IS IN THE REDUCER.\n                onChange={event => this.handleChange(\"style_id\", event)}\n              >\n                <option value=\"\">None</option>\n                {this.props.reduxStore.batchReducer.map(style => {\n                  return (\n                    <option key={style.id} value={style.id}>\n                      {style.beer_type}\n                    </option>\n                  );\n                })}\n              </select>\n              {/* <option>Altbier</option>\n              <option>Amber Ale</option>\n              <option>American Lager</option>\n              <option>American Pale Ale</option>\n              <option>Barley Wine</option>\n              <option>Berliner Weisse</option>\n              <option>Bière de Garde</option>\n              <option>Bitter</option>\n              <option>Blonde Ale</option>\n              <option>Bock</option>\n              <option>Brown Ale</option>\n              <option>California Common / Steam Beer</option>\n              <option>Cream Ale</option>\n              <option>Dortmunder Export</option>\n              <option>Doppelbock</option>\n              <option>Dubbel</option>\n              <option>Dunkel</option>\n              <option>Dunkelweizen</option>\n              <option>Eisbock</option>\n              <option>English Porter</option>\n              <option>Flanders Red Ale</option>\n              <option>Golden / Summer Ale</option>\n              <option>Gose</option>\n              <option>Gueuze</option>\n              <option>Grodziskie</option>\n              <option>Hefeweizen</option>\n              <option>Helles</option>\n              <option>Helles Bock</option>\n              <option>India Pale Ale</option>\n              <option>Irish Red Ale</option>\n              <option>Irish Stout</option>\n              <option>Kellerbier</option>\n              <option>Kölsch</option>\n              <option>Lager</option>\n              <option>Lambic</option>\n              <option>Maibock</option>\n              <option>Mārzienbier / Oktoberfestbier</option>\n              <option>Mild Ale</option>\n              <option>Old Ale</option>\n              <option>Oud Bruin</option>\n              <option>Pale Ale</option>\n              <option>Pale Lager</option>\n              <option>Pilsener/Pilsner/Pils</option>\n              <option>Porter</option>\n              <option>Quadrupel</option>\n              <option>Red Ale</option>\n              <option>Roggenbier</option>\n              <option>Rye Beer</option>\n              <option>Saison</option>\n              <option>Shchwarzbier</option>\n              <option>Scotch Ale</option>\n              <option>Stout</option>\n              <option>Vienna Lager</option>\n              <option>Witbier</option>\n              <option>Wheat beer</option>\n              <option>Weissbier</option>\n              <option>Weizenbock</option>\n              <option>Trappist Beer</option>\n              <option>Tripel</option>\n            </select> */}\n          </div>\n          {/* <p>Name your Beer: </p> */}\n          <label for=\"sel1\">Name your Beer: </label>\n          <input\n            class=\"batchForm\"\n            onChange={this.handleChangeBeerName}\n            type=\"text\"\n            placeholder=\"Name the Beer / Batch\"\n          />\n          <br></br>\n          {/* <p>Give the batch a number: </p> */}\n          <label for=\"sel1\">Give the batch a number: </label>\n          <input\n            class=\"batchForm\"\n            onChange={this.handleChangeBatchNumber}\n            type=\"text\"\n            placeholder=\"Give your batch a number\"\n          />\n          <br></br>\n          {/* <p>Hot-Liquor-Tank-Temp: </p> */}\n          <label for=\"sel1\">Hot-Liquor-Tank Temp: </label>\n          <input\n            class=\"batchForm\"\n            onChange={this.handleChangeHotLiquor}\n            type=\"text\"\n            placeholder=\"Please log the HLT Temp\"\n          />\n          <br></br>\n          {/* <p>Mash-In-Temp: </p> */}\n          <label for=\"sel1\">Mash-In-Temp: </label>\n          <input\n            class=\"batchForm\"\n            onChange={this.handleChangeMashIn}\n            type=\"text\"\n            placeholder=\"Please log the Mash-In Temp\"\n          />\n          <br></br>\n          {/* <p>Mash-Out-Temp: </p> */}\n          <label for=\"sel1\">Mash-Out-Temp: </label>\n          <input\n            class=\"batchForm\"\n            onChange={this.handleChangeMashOut}\n            type=\"text\"\n            placeholder=\"Please log the Mash-In Temp\"\n          />\n          <br></br>\n          {/* <p>Boil Time: </p> */}\n          <label for=\"sel1\">Boil Time: </label>\n          <input\n            class=\"batchForm\"\n            onChange={this.handleChangeBoilTime}\n            type=\"text\"\n            placeholder=\"Please log the Boil Time\"\n          />\n          <br></br>\n          {/* <p>Please leave detailed notes: </p> */}\n          <label for=\"sel1\">Please leave detailed notes: </label>\n          <input\n            class=\"batchForm\"\n            onChange={this.handleChangeNotes}\n            type=\"text\"\n            placeholder=\"Please log any notes\"\n          />\n          <br></br>\n          <button type=\"submit\">Submit to Brew Log</button>\n        </form>\n        <Button onClick={this.toLogBook}>GO TO LOG BOOK</Button>\n        <Button onClick={this.toHome}>GO TO HOME PAGE</Button>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = reduxStore => {\n    return{\n        reduxStore\n    };\n};\n\nexport default connect(mapStateToProps)(CreateBatchPage);"]},"metadata":{},"sourceType":"module"}