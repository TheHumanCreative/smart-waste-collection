{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mileslacek/prime/tier3/prime-solo-project-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchBatchItem),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(updateBatchItem),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(editSaga);\n\nimport { put, takeLatest, takeEvery } from \"redux-saga/effects\";\nimport axios from \"axios\";\n\nfunction fetchBatchItem() {\n  var infoBatchResponse;\n  return _regeneratorRuntime.wrap(function fetchBatchItem$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return axios.get(\"/api/batch\");\n\n        case 3:\n          infoBatchResponse = _context.sent;\n          // THEN SEND TO REDUX\n          console.log('saga response!', infoDResponse.data); // PUT IS DISPATCH\n\n          _context.next = 7;\n          return put({\n            type: 'SET_INFO',\n            payload: infoDetailsResponse.data\n          });\n\n        case 7:\n          _context.next = 12;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 9]]);\n}\n\nfunction updateBatchItem(action) {\n  return _regeneratorRuntime.wrap(function updateBatchItem$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          console.log(\"updating Batch:\", action.payload); // console.log(action.payload.id, action.payload.user_id, action.payload.style_id, action.payload.beer_name, action.payload.batch_name, action.payload.temp_hlt, action.payload.temp_mash_in, action.payload.temp_mash_out, action.payload.time_boil, action.payload.notes);\n\n          _context2.prev = 1;\n          _context2.next = 4;\n          return axios.put(\"/edit\", action.payload);\n\n        case 4:\n          _context2.next = 6;\n          return put({\n            type: \"SET_INFO\",\n            payload: action.payload.id\n          });\n\n        case 6:\n          _context2.next = 11;\n          break;\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](1);\n          console.log(\"Error in PUT\", _context2.t0);\n\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[1, 8]]);\n}\n\nfunction editSaga() {\n  return _regeneratorRuntime.wrap(function editSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return takeLatest(\"FETCH_BATCH_INFO\", fetchBatchItem);\n\n        case 2:\n          _context3.next = 4;\n          return takeEvery(\"UPDATE\", updateBatchItem);\n\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\n\nexport default editSaga;","map":{"version":3,"sources":["/Users/mileslacek/prime/tier3/prime-solo-project-master/src/redux/sagas/editSaga.js"],"names":["fetchBatchItem","updateBatchItem","editSaga","put","takeLatest","takeEvery","axios","get","infoBatchResponse","console","log","infoDResponse","data","type","payload","infoDetailsResponse","action","id"],"mappings":";;;;yBAGUA,c;;;yBAoBAC,e;;;yBAcAC,Q;;AArCV,SAASC,GAAT,EAAcC,UAAd,EAA0BC,SAA1B,QAA2C,oBAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAAUN,cAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGkC,iBAAMM,KAAK,CAACC,GAAN,cAAN;;AAHlC;AAGcC,UAAAA,iBAHd;AAIQ;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BC,aAAa,CAACC,IAA5C,EALR,CAMQ;;AANR;AAOQ,iBAAMT,GAAG,CAAE;AACPU,YAAAA,IAAI,EAAE,UADC;AAEPC,YAAAA,OAAO,EAAEC,mBAAmB,CAACH;AAFtB,WAAF,CAAT;;AAPR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAaQH,UAAAA,OAAO,CAACC,GAAR;;AAbR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAoBA,SAAUT,eAAV,CAA0Be,MAA1B;AAAA;AAAA;AAAA;AAAA;AACEP,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BM,MAAM,CAACF,OAAtC,EADF,CAEE;;AAFF;AAAA;AAII,iBAAMR,KAAK,CAACH,GAAN,UAAmBa,MAAM,CAACF,OAA1B,CAAN;;AAJJ;AAAA;AAKI,iBAAMX,GAAG,CAAC;AACRU,YAAAA,IAAI,EAAE,UADE;AAERC,YAAAA,OAAO,EAAEE,MAAM,CAACF,OAAP,CAAeG;AAFhB,WAAD,CAAT;;AALJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAUIR,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;;AAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcA,SAAUR,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAME,UAAU,CAAC,kBAAD,EAAqBJ,cAArB,CAAhB;;AADF;AAAA;AAEE,iBAAMK,SAAS,CAAC,QAAD,EAAWJ,eAAX,CAAf;;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKA,eAAeC,QAAf","sourcesContent":["import { put, takeLatest, takeEvery } from \"redux-saga/effects\";\nimport axios from \"axios\";\n\nfunction* fetchBatchItem() {\n    try{\n        // GET THE INFO FROM OUR SERVER\n        const infoBatchResponse = yield axios.get(`/api/batch`);\n        // THEN SEND TO REDUX\n        console.log('saga response!', infoDResponse.data);\n        // PUT IS DISPATCH\n        yield put ({\n            type: 'SET_INFO',\n            payload: infoDetailsResponse.data\n        });\n        \n    }catch (error) {\n        console.log(error);\n    }\n}\n\n\n\n\nfunction* updateBatchItem(action) {\n  console.log(\"updating Batch:\", action.payload);\n  // console.log(action.payload.id, action.payload.user_id, action.payload.style_id, action.payload.beer_name, action.payload.batch_name, action.payload.temp_hlt, action.payload.temp_mash_in, action.payload.temp_mash_out, action.payload.time_boil, action.payload.notes);\n  try {\n    yield axios.put(`/edit`, action.payload);\n    yield put({\n      type: \"SET_INFO\",\n      payload: action.payload.id\n    });\n  } catch (error) {\n    console.log(\"Error in PUT\", error);\n  }\n}\n\nfunction* editSaga() {\n  yield takeLatest(\"FETCH_BATCH_INFO\", fetchBatchItem);\n  yield takeEvery(\"UPDATE\", updateBatchItem);\n}\n\nexport default editSaga;"]},"metadata":{},"sourceType":"module"}